---
title: 动画
slug: animations
date: 0014/01/01
number: 14
points: 10
contents: 看看当 Meteor 交替两个 DOM 元素时幕后发生了什么。|学习重排帖子时如何加入动画效果。|学习如何在插入和删除帖子时加入动画效果。|学习两页面之间的切换动画
paragraphs: 58
---

我们现在有了实时的投票、评分和排名。然而，由于帖子在首页上跳来跳去，而导致了跳动不稳的用户体验。我们用动画来平滑这种过渡。

### 介绍 `_uihooks`

`_uihooks` 相对较新，Blaze 未归档的特性。正如其名称所示，它提供了每当插入、删除或动画元素时可以被触发的 hooks。

Hooks 的全部清单如下：

- `insertElement`: 当新元素被插入时调用。
- `moveElement`: 当元素被移动时调用。
- `removeElement`: 当元素被删除时调用。

一旦定义，这些 hooks 就会*替代* Meteor 的默认行为。换句话说，Meteor 会用我们规定的行为来替代默认的插入、移动或删除元素的行为 ———— 这由我们来确定这行为会真正地工作！

### Meteor & DOM

在我们开始有趣部分（使东西移动）之前，我们需要理解 Meteor 如何与 DOM（Document Object Model————组成页面内容的 HTML 元素集合）交互的。

////

////

////

1. ////
2. ////
3. ////
4. ////
5. ////
6. ////

////

<%= diagram "animation_diagram", "Swtiching two posts", "pull-center" %>

////

////

////

### Proper Timing

////

////

////

////

////

////

### CSS Positioning

////

////

////

////

////

~~~css
.post{
  position:relative;
  transition:all 300ms 0ms ease-in;
}
~~~
<%= caption "client/stylesheets/style.css" %>

////

////

<% note do %>

### Position:absolute

////

////

<% end %>

### Total Recall

////

////

> //// 

////

////

### Ranking Posts

////

////

////

////

~~~js
Template.postsList.helpers({
  postsWithRank: function() {
    this.posts.rewind();
    return this.posts.map(function(post, index, cursor) {
      post._rank = index;
      return post;
    });
  }
});
~~~
<%= caption "/client/views/posts/posts_list.js" %>
<%= highlight "2~8" %>

////

////

~~~html
<template name="postsList">
  <div class="posts">
    {{#each postsWithRank}}
      {{> postItem}}
    {{/each}}
    
    {{#if nextPath}}
      <a class="load-more" href="{{nextPath}}">Load more</a>
    {{/if}}
  </div>
</template>
~~~
<%= caption "/client/views/posts/posts_list.html" %>

<%= highlight "3" %>

<% note do %>

### Be Kind, Rewind

////

////

////

<% end %>

### Putting it together

////

~~~js
Template.postItem.helpers({
  //...
});

Template.postItem.rendered = function(){
  // animate post from previous position to new position
  var instance = this;
  var rank = instance.data._rank;
  var $this = $(this.firstNode);
  var postHeight = 80;
  var newPosition = rank * postHeight;
 
  // if element has a currentPosition (i.e. it's not the first ever render)
  if (typeof(instance.currentPosition) !== 'undefined') {
    var previousPosition = instance.currentPosition;
    // calculate difference between old position and new position and send element there
    var delta = previousPosition - newPosition;
    $this.css("top", delta + "px");
  }
  
  // let it draw in the old position, then..
  Meteor.defer(function() {
    instance.currentPosition = newPosition;
    // bring element back to its new original position
    $this.css("top",  "0px");
  }); 
};

Template.postItem.events({
  //...
});
~~~
<%= caption "/client/views/posts/post_item.js" %>
<%= highlight "5~27" %>

<%= commit "14-1", "Added post reordering animation." %>

////

////

////

### Animating New Posts

////

////

1. ////
2. ////

////

////

~~~js
Template.postItem.helpers({
  //...
});

Template.postItem.rendered = function(){
  // animate post from previous position to new position
  var instance = this;
  var rank = instance.data._rank;
  var $this = $(this.firstNode);
  var postHeight = 80;
  var newPosition = rank * postHeight;
  
  // if element has a currentPosition (i.e. it's not the first ever render)
  if (typeof(instance.currentPosition) !== 'undefined') {
    var previousPosition = instance.currentPosition;
    // calculate difference between old position and new position and send element there
    var delta = previousPosition - newPosition;
    $this.css("top", delta + "px");
  } else {
    // it's the first ever render, so hide element
    $this.addClass("invisible");
  }
  
  // let it draw in the old position, then..
  Meteor.defer(function() {
    instance.currentPosition = newPosition;
    // bring element back to its new original position
    $this.css("top",  "0px").removeClass("invisible");
  }); 
};

Template.postItem.events({
  //...
});
~~~
<%= caption "/client/views/posts/post_item.js" %>
<%= highlight "19~22,28" %>

<%= commit "14-2", "Fade items in when they are drawn." %>

////

<% note do %>

### CSS & JavaScript

////

////

<% end %>

////
